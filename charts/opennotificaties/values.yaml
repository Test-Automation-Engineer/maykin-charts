global:
  configuration:
    enabled: false
    overwrite: true
    organization: Gemeente Example
    openzaakAutorisatiesApi: https://openzaak.example.nl/autorisaties/api/v1/
    notificatiesApi: http://opennotificaties.example.nl/api/v1/
    notificatiesOpenzaakClientId: notif-client-id
    notificatiesOpenzaakSecret: notif-secret
    openzaakNotificatiesClientId: oz-client-id
    openzaakNotificatiesSecret: oz-secret

  settings:
    # -- Global databasehost, overrides setting.database.host
    databaseHost: ""

configuration:
  enabled: false
  overwrite: true
  sites:
    enabled: false
    notificatiesDomain: ""
    organization: ""
  openzaakAuthorization:
    enabled: false
    ApiRoot: ""
    notificationOpenzaakClientId: ""
    notifcationOpenzaakSecret: ""
  notificaties:
    enabled: false
    openzaakNotifcationClientId: ""
    openzaakNotificationSecret: ""
  superuser:
    username: ""
    password: ""
    email: ""
  initContainer:
    # -- Run the setup configuration command in a init container
    enabled: true
  job:
    # -- Run the setup configuration command as a job
    enabled: false
    backoffLimit: 6
    restartPolicy: OnFailure
    resources: {}
      # limits:
      #   cpu: 200m
      #   memory: 256Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi

tags:
  redis: true
  rabbitmq: true

replicaCount: 1

image:
  repository: openzaak/open-notificaties
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""
  automountServiceAccountToken: true

podAnnotations: {}

podLabels: {}

podSecurityContext:
  fsGroup: 1000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

livenessProbe:
  initialDelaySeconds: 60
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

readinessProbe:
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  className: ""
  # -- ingress hosts
  hosts: []
  #  - host: opennotificaties.gemeente.nl
  #    paths:
  #      - path: /
  #        pathType: ImplementationSpecific
  tls: []
  #  - secretName: opennotificaties-tls
  #    hosts:
  #      - opennotificaties.gemeente.nl

# -- Specify extra ingresses, for example if you have multiple ingress classes
extraIngress: []
# e.g:
# extraIngress:
#  - name: opennotificaties-azuregateway
#    annotations:
#      appgw.ingress.kubernetes.io/ssl-redirect: "true"
#    className: azure-application-gateway
#    hosts:
#      - host: opennotificaties.gemeente.nl
#        paths:
#          - path: /
#            pathType: ImplementationSpecific
#            servicename: opennotificaties
#            portNumber: 8000
#    tls:
#      - secretName: opennotificaties-tls
#        hosts:
#          - "opennotificaties.gemeente.nl"

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 200m
  #   memory: 256Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

pdb:
  create: false
  minAvailable: 1
  maxUnavailable: ""

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  enabled: true
  size: 512Mi
  storageClassName: ""
  existingClaim: null
  mediaMountSubpath: opennotificaties/media

# Existing Secret must be defined for AzureVaultSecret to work
existingSecret: null

# This will create an AzureVaultSecret object in k8s, only Multi Key Value Secret are supported by this chart
# ref: https://akv2k8s.io/tutorials/sync/4-multi-key-value-secret/ https://learn.microsoft.com/en-us/azure/key-vault/secrets/multiline-secrets
# Using this feature requires you to define existingSecret
azureVaultSecret:
  # The name of the Azure Key Vault, setting this will create the AzureVaultSecret
  vaultName: null
  # The name of the Multi Key Value Secret
  objectName: ""
  # Make sure this matches the content of the secret, can be either 'application/x-json' or 'application/x-yaml'
  contentType: ""
  # You must set .Values.existingSecret
  secretName: "{{ .Values.existingSecret }}"

# -- Array with extra environment variables to add
extraEnvVars: []
# e.g:
# extraEnvVars:
#   - name: FOO
#     value: "bar"

# -- Optionally specify extra list of additional volumes
extraVolumes: []
# e.g:
# extraVolumes:
#   - name: verify-certs
#     configMap:
#       name: verify-certs

# -- Optionally specify extra list of additional volumeMounts
extraVolumeMounts: []
# e.g:
# extraVolumeMounts:
#  - name: verify-certs
#    mountPath: /etc/ssl/certs/extra-certs/

# -- Path to extra certificates or CA (root) certificates, comma seperated
# Warning, If the file does not exist the pod(s) will not start
extraVerifyCerts: ""
# e.g.
# extraVerifyCerts: /etc/ssl/certs/extra-certs/staatdernederlandeng1.pem

settings:
  allowedHosts: ""
  djangoSettingsModule: nrc.conf.docker
  useXForwardedHost: true

  # -- When set to true notifications are saved to the database and accessible from the admin interface
  logNotifications: true
  cleanOldNotifications:
    # -- Clean logged notifications
    enabled: false
    # -- Number of days to retain logged notifications, default is 30 days
    daysRetained: ""
    cronjob:
      # -- Schedule to run the clean logged notifications cronjob
      schedule: "0 0 * * *"
      historyLimit: 1
      resources: {}

  # -- The maximum number of automatic retries. After this amount of retries, Open Notificaties stops trying to deliver the message. Application default is 5.
  maxRetries: ""
  # --  If specified, a factor applied to the exponential backoff. This allows you to tune how quickly automatic retries are performed. Application default is 3.
  retryBackoff: ""
  # -- An upper limit to the exponential backoff time. Application default is 48.
  retryBackoffMax: ""

  # -- Generate secret key at https://djecrety.ir/
  secretKey: ""

  # -- sets the 'ENVIRONMENT' variable
  environment: ""

  database:
    host: ""
    port: 5432
    username: ""
    password: ""
    name: ""
    sslmode: prefer

  # -- use 2 if enabling ingress
  numProxies: 1

  # -- Disable two factor authentication
  disable2fa: false

  email:
    host: localhost
    port: 25
    username: ""
    password: ""
    useTLS: false
    defaultFrom: ""

  flower:
    urlPrefix: ""
    basicAuth: ""

  elasticapm:
    url: ""
    token: ""
    serviceName: ""

  sentry:
    dsn: ""

  cache:
    # -- Sets 'CACHE_DEFAULT' var, only required when tags.redis is false
    default: ""
    # -- Sets 'CACHE_AXES' var, only required when tags.redis is false
    axes: ""
    # When not using the redis subcharts you can set them manually like this:
    # default: myredisserver:6379/0
    # axes: myredisserver:6379/0

  celery:
    # -- Celery loglevel
    logLevel: debug
    # -- Sets the 'CELERY_BROKER_URL' var, only required when tags.rabbitmq is false
    brokerUrl: ""
    # -- Sets the 'CELERY_RESULT_BACKEND' var, only required when tags.redis is false
    resultBackend: ""
    # -- Sets the 'PUBLISHER_BROKER_URL' var, only required when tags.rabbitmq is false
    publishBrokerUrl: ""
    # -- RabbitMQ server hostname
    rabbitmqHost: ""
    # When not using the rabbitmq / redis subcharts you can set them manually like this:
    #
    # brokerUrl: amqp://username:password@myrabbitmqbroker:5672//
    # resultBackend: redis://myredisserver:6379/1
    # publishBrokerUrl: amqp://username:password@myrabbitmqbroker::5672/%2F
    # rabbitmqHost: myrabbitmqbroker

  isHttps: true

  debug: false

  uwsgi:
    master: ''
    threads: ''
    processes: ''
    maxRequests: ''
    harakiri: ''

worker:
  replicaCount: 2
  concurrency: 4
  podLabels: {}
  resources: {}
  maxWorkerLivenessDelta: ""
  livenessProbe:
    exec:
      command:
        - python
        - /app/bin/check_celery_worker_liveness.py
    initialDelaySeconds: 60
    # Periodeseconds should not exceed maxWorkerLivenessDelta
    periodSeconds: 50
    timeoutSeconds: 15
    failureThreshold: 10
    successThreshold: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

flower:
  enabled: false
  replicaCount: 1
  podLabels: {}
  livenessProbe:
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  readinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  resources: {}

beat:
  replicaCount: 1
  podLabels: {}
  livenessProbe:
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  readinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  resources: {}  

##################
# Redis subchart #
##################

redis:
  architecture: standalone
  auth:
    enabled: false
  master:
    persistence:
      enabled: true
      size: 8Gi
      storageClass: ""
    resources:
      requests:
        cpu: 10m
        memory: 20Mi

#####################
# RabbitMQ subchart #
#####################

rabbitmq:
  auth:
    username: user
    password: ""
    erlangCookie: ""
  persistence:
    enabled: false
    size: 1Gi
    existingClaim: null
  resources: {}
    # limits:
    #   memory: 1000Mi
    #   cpu: 500m
    # requests:
    #   memory: 600Mi
    #   cpu: 200m
  rbac:
    create: false
  clustering:
    enabled: false
